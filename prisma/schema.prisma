generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  enrollments Enrollment[]
  progress   Progress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  description String
  category    String
  level       Level
  durationMins Int
  lessons     Lesson[]
  quiz        Quiz?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lesson {
  id        String  @id @default(cuid())
  title     String
  content   String
  resources Json?
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId  String
  order     Int     @default(0)
}

model Quiz {
  id        String   @id @default(cuid())
  title     String
  questions Json
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId  String   @unique
}

model Enrollment {
  id        String @id @default(cuid())
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  course    Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId  String
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}

model Progress {
  id        String @id @default(cuid())
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  course    Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId  String
  completedLessonIds String[]
  quizScore Int?
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
